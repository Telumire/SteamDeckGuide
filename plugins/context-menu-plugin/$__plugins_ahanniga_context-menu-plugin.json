{"tiddlers":{"$:/plugins/ahanniga/context-menu/view-template":{"title":"$:/plugins/ahanniga/context-menu/view-template","created":"20220724192929363","modified":"20220724211425616","tags":"$:/tags/ViewTemplate","type":"text/vnd.tiddlywiki","text":"<$contextMenu>\n"},"$:/plugins/ahanniga/context-menu/ContextListener.js":{"title":"$:/plugins/ahanniga/context-menu/ContextListener.js","text":"/*\\\ntitle: $:/plugins/ahanniga/context-menu/ContextListener.js\ntype: application/javascript\nmodule-type: widget\n\nThis widgets implements context menus to tiddlers\n\\*/\n\n(function () {\n\n  var htmlToElement = function (html) {\n    var template = document.createElement('template');\n    html = html.trim();\n    template.innerHTML = html;\n    return template.content.firstChild;\n  }\n\n  var Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\n  var template = `<div id=\"contextMenu\" class=\"context-menu\" style=\"display: none; z-order: 9999;\"></div>`;\n\n  var ContextListener = function (parseTreeNode, options) {\n    this.initialise(parseTreeNode, options);\n  };\n\n  ContextListener.prototype = new Widget();\n\n  ContextListener.prototype.render = function (parent, nextSibling) {\n    this.parentDomNode = parent;\n    this.execute();\n    var self = this;\n    parent.addEventListener(\"contextmenu\", function (event) { self.contextmenu.call(self, event) });\n    document.onclick = this.hideMenu;\n  };\n\n  ContextListener.prototype.contextmenu = function (event) {\n    var self = this;\n    event.preventDefault();\n    var menu = document.getElementById(\"contextMenu\");\n\n    if (menu == null) {\n      this.document.body.appendChild(htmlToElement(template));\n      menu = document.getElementById(\"contextMenu\");\n      menu.addEventListener(\"click\", function (event) { self.menuClicked.call(self, event) });\n    }\n    menu.innerHTML = \"\";\n\n    var contextMenuOptions = $tw.wiki.getTiddlerText(\"$:/plugins/ahanniga/context-menu/options\");\n    var menuHtml = [\"<ul>\"];\n    var options = JSON.parse(contextMenuOptions)[\"context-menu\"];\n    for (var index = 0; index < options.length; index++) {\n      var icon = $tw.wiki.getTiddlerText(options[index].icon);\n      var tid = event.currentTarget.getAttribute(\"data-tiddler-title\");\n      menuHtml.push(`<li><a action=\"${options[index].action}\" id=\"action-${index}\" tid=\"${tid}\" href=\"\">${icon} ${options[index].name}</a></li>`);\n    }\n    menuHtml.push(\"</ul>\");\n    menu.append(htmlToElement(menuHtml.join(\"\")))\n\n    if (menu.style.display == \"block\") {\n      this.hideMenu();\n    } else {\n      menu.style.display = 'block';\n      menu.style.left = event.pageX + \"px\";\n      menu.style.top = event.pageY + \"px\";\n    }\n\n    return false;\n  };\n\n  ContextListener.prototype.menuClicked = function (event) {\n    var action = event.target.getAttribute(\"action\");\n    var tid = event.target.getAttribute(\"tid\");\n    var stid, state, text;\n    event.preventDefault();\n\n    switch (action) {\n      case \"tm-fold-tiddler\":\n        stid = `$:/state/folded/${tid}`;\n        state = $tw.wiki.getTiddlerText(stid, \"show\") === \"show\" ? \"hide\" : \"show\";\n        $tw.wiki.setText(stid, \"text\", null, state);\n        break;\n      case \"tm-copy-to-clipboard\":\n        text = $tw.wiki.getTiddlerText(tid);\n        this.dispatchEvent({ type: action, param: text });\n        break;\n\n      default:\n        this.dispatchEvent({ type: action, param: tid });\n    }\n\n    return false;\n  };\n\n  ContextListener.prototype.execute = function () {\n  };\n\n  ContextListener.prototype.refresh = function (changedTiddlers) {\n    return false;\n  };\n\n  ContextListener.prototype.hideMenu = function () {\n    var menu = document.getElementById(\"contextMenu\");\n    if (menu != null) {\n      menu.style.display = \"none\";\n    }\n  };\n\n  exports.contextMenu = ContextListener;\n\n})();\n","type":"application/javascript","module-type":"widget","created":"20220724211224035","modified":"20220726145239813"},"$:/plugins/ahanniga/context-menu/options":{"text":"{\n\t\"context-menu\": [ \n\t\t  {\n\t\t\t  \"name\": \"Edit\",\n\t\t\t  \"icon\": \"$:/core/images/edit-button\",\n\t\t\t  \"action\": \"tm-edit-tiddler\"\n\t\t  },\n\t\t  {\n\t\t\t  \"name\": \"Toggle Fold\",\n\t\t\t  \"icon\": \"$:/core/images/fold-button\",\n\t\t\t  \"action\": \"tm-fold-tiddler\"\n\t\t  },\n\t\t  {\n\t\t\t  \"name\": \"Copy to Clipboard\",\n\t\t\t  \"icon\": \"$:/core/images/copy-clipboard\",\n\t\t\t  \"action\": \"tm-copy-to-clipboard\"\n\t\t  },\n\t\t{\n\t\t\t  \"name\": \"Close\",\n\t\t\t  \"icon\": \"$:/core/images/close-button\",\n\t\t\t  \"action\": \"tm-close-tiddler\"\n\t\t  },\n\t\t  {\n\t\t\t  \"name\": \"Delete\",\n\t\t\t  \"icon\": \"$:/core/images/delete-button\",\n\t\t\t  \"action\": \"tm-delete-tiddler\"\n\t\t  }\n\t  ]\n  }","type":"application/json","created":"20220725181550455","modified":"20220726145135337","tags":"","title":"$:/plugins/ahanniga/context-menu/options"},"$:/plugins/ahanniga/context-menu/styles.css":{"title":"$:/plugins/ahanniga/context-menu/styles.css","created":"20220725150446044","modified":"20220726165539686","tags":"$:/tags/Stylesheet","type":"text/vnd.tiddlywiki","text":"\n\n.context-menu {\n    position: absolute;\n\t\tmin-width: 180px;\n    z-index: 99;\n    display: flex;\n    flex-direction: column;\n    background-color: <<colour dropdown-background>>;\n    border-radius: 6px;\n    box-shadow: 0 10px 20px rgb(64 64 64 / 5%);\n    padding: 0;\n    border: 1px solid <<colour dropdown-border>>;\n}\n\n.context-menu > ul {\n    list-style: none;\n    padding: 0;\n    margin: 6px 0;\n}\n\n.context-menu > ul > li > a {\n  font: inherit;\n  border: 0;\n  padding: 4px 14px 4px 10px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  position: relative;\n  text-decoration: unset;\n  color: <<colour foreground>>;\n  font-weight: 500;\n}\n\n.context-menu > ul > li > a:hover {\n    background: <<colour tiddler-link-foreground>>;\n    color: <<colour tiddler-link-background>>; \n    fill: <<colour tiddler-link-background>>; \n}\n\n.context-menu > ul > li > a:hover > svg {\n    color: <<colour tiddler-link-background>>; \n    fill: <<colour tiddler-link-background>>; \n}\n\n.context-menu > ul > li > a > i {\n  padding-right: 10px;\n}\n\n.context-menu > ul > li > a > svg {\n    color: <<colour foreground>>;\n    fill: <<colour foreground>>;\n    width: 13px;\n    margin-right: 9px;\n    height: 13px;\n}\n\n"},"$:/plugins/ahanniga/context-menu-plugin/License":{"title":"$:/plugins/ahanniga/context-menu-plugin/License","type":"text/plain","text":"MIT License\n\nCopyright (c) 2022, A Hannigan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."},"$:/plugins/ahanniga/context-menu-plugin/README":{"title":"$:/plugins/ahanniga/context-menu-plugin/README","text":"\\define plugin() $:/plugins/ahanniga/context-menu-plugin\n\\define install()\n<$list\n  filter=\"[<transclusion>prefix[{$(plugin)$/README|$(plugin)$/README|||}]]\"\n  emptyMessage=\"$(plugin)$\"\n>\n{{ $(plugin)$||$:/core/ui/Components/plugin-info }}\n</$list>\n\\end\n\nConfigurable context menus for tiddlers\n\n!! Install\n\n[[Manually install|https://tiddlywiki.com/#Manually%20installing%20a%20plugin]] the plugin by dragging this link to your ~TiddlyWiki:\n\n<<install>>\n\nThen save and refresh your ~TiddlyWiki.\n"}}}